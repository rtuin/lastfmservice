<?php
/**
 * This file is part of the Lastfm API wrapper library.
 * The file is generated based on API documentation available at
 * http://www.last.fm/api
 * 
 * @category  Last.fm
 * @package   Service
 * @link      http://github.com/rtuin/lastfmservice
 */


/** @namespace */
namespace Lastfm\Service;

/**
 * @category Last.fm
 * @package  Service
 * @link     http://github.com/rtuin/lastfmservice
 */
class Event
{

    /**
     * @val Client An instance of the Lastfm client
     */
    public $client = null;

    /**
     * @param Client|null $client An instance of the Lastfm client
     */
    public function __construct(Client $client = null)
    {
        if (null !== $client &&  $client instanceof Client) {
            $this->client = $client;
        }
    }

    /**
     * @param Client $client An instance of the Lastfm client
     * @return Event
     */
    public function setClient(Client $client)
    {
        $this->client = $client;
        return $this;
    }

    /**
     * @return Client An instance of the Lastfm client
     */
    public function getClient()
    {
        return $this->client;
    }

    /**
     * Set a user's attendance status for an event.
     * 
     * @param string $event The numeric last.fm event id
     * @param string $status The attendance status (0=Attending, 1=Maybe attending,
     * 2=Not attending)
     * @param string $api_sig A Last.fm method signature. See authentication for more
     * information.
     * @param string $sk A session key generated by authenticating a user via the
     * authentication protocol.
     * @return \SimpleXmlElement The direct response from the Lastfm server
     */
    public function attend($event, $status, $api_sig, $sk)
    {
        return $this->getClient()->call('event.attend', array(
            'event' => $event,
            'status' => $status,
            'api_sig' => $api_sig,
            'sk' => $sk,
        ));
    }

    /**
     * Get a list of attendees for an event.
     * 
     * @param string $event The numeric last.fm event id
     * @param string|null $page The page number to fetch. Defaults to first page.
     * @param string|null $limit The number of results to fetch per page. Defaults to
     * 50.
     * @return \SimpleXmlElement The direct response from the Lastfm server
     */
    public function getAttendees($event, $page = null, $limit = null)
    {
        return $this->getClient()->call('event.getattendees', array(
            'event' => $event,
            'page' => $page,
            'limit' => $limit,
        ));
    }

    /**
     * Get the metadata for an event on Last.fm. Includes attendance and lineup
     * information.
     * 
     * @param string $event The numeric last.fm event id
     * @return \SimpleXmlElement The direct response from the Lastfm server
     */
    public function getInfo($event)
    {
        return $this->getClient()->call('event.getinfo', array(
            'event' => $event,
        ));
    }

    /**
     * Get shouts for this event. Also available as an rss feed.
     * 
     * @param string $event The numeric last.fm event id
     * @param string|null $page The page number to fetch. Defaults to first page.
     * @param string|null $limit The number of results to fetch per page. Defaults to
     * 50.
     * @return \SimpleXmlElement The direct response from the Lastfm server
     */
    public function getShouts($event, $page = null, $limit = null)
    {
        return $this->getClient()->call('event.getshouts', array(
            'event' => $event,
            'page' => $page,
            'limit' => $limit,
        ));
    }

    /**
     * Share an event with one or more Last.fm users or other friends.
     * 
     * @param string $sk A session key generated by authenticating a user via the
     * authentication protocol.
     * @param string $api_sig A Last.fm method signature. See authentication for more
     * information.
     * @param string $recipient Email Address | Last.fm Username - A comma delimited
     * list of email addresses or Last.fm usernames. Maximum is 10.
     * @param string $event An event ID
     * @param string|null $public Optionally show the share in the sharing users recent
     * activity. Defaults to 0 (false).
     * @param string|null $message An optional message to send with the recommendation.
     * If not supplied a default message will be used.
     * @return \SimpleXmlElement The direct response from the Lastfm server
     */
    public function share($sk, $api_sig, $recipient, $event, $public = null, $message = null)
    {
        return $this->getClient()->call('event.share', array(
            'sk' => $sk,
            'api_sig' => $api_sig,
            'recipient' => $recipient,
            'event' => $event,
            'public' => $public,
            'message' => $message,
        ));
    }

    /**
     * Shout in this event's shoutbox
     * 
     * @param string $event The id of the event to shout on
     * @param string $message The message to post to the shoutbox
     * @param string $api_sig A Last.fm method signature. See authentication for more
     * information.
     * @param string $sk A session key generated by authenticating a user via the
     * authentication protocol.
     * @return \SimpleXmlElement The direct response from the Lastfm server
     */
    public function shout($event, $message, $api_sig, $sk)
    {
        return $this->getClient()->call('event.shout', array(
            'event' => $event,
            'message' => $message,
            'api_sig' => $api_sig,
            'sk' => $sk,
        ));
    }


}

